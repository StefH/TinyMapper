<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<RootNamespace>Nelibur.ObjectMapper</RootNamespace>
		<PackageId>TinyMapper.Signed</PackageId>
		<ReleaseNotes>Signed the original TinyMapper with a strong name key.</ReleaseNotes>
		<TargetFrameworks>net35;net40;netstandard1.3</TargetFrameworks>
		<ImportLibs>net</ImportLibs>
		<Configurations>Debug;Release;VS</Configurations>
		<Authors>Sergey Morenko;Stef Heyenrath</Authors>
		<Copyright>Copyright © 2024 Stef Heyenrath</Copyright>
		<Company>Sergey Morenko</Company>
		<Description>A signed version from TinyMapper - a tiny and quick object mapper for .Net.</Description>
		<!--<PackageLicenseUrl>https://github.com/TinyMapper/TinyMapper/blob/master/LICENSE</PackageLicenseUrl>-->
		<PackageLicenseExpression>MIT</PackageLicenseExpression>
		<!--<PackageIconUrl>http://www.gravatar.com/avatar/cfffd78dd57d31992a0052c6786cdc3d</PackageIconUrl>-->
		<ApplicationIcon>../../icon.ico</ApplicationIcon>
		<PackageIcon>icon.png</PackageIcon>
		<PackageTags>TinyMapper;Mapper</PackageTags>
		<RepositoryType>git</RepositoryType>
		<RepositoryUrl>https://github.com/StefH/TinyMapper</RepositoryUrl>
		<PackageProjectUrl>http://tinymapper.net/</PackageProjectUrl>
		<IncludeSymbols>false</IncludeSymbols>
		<Version>3.0.3-preview-01</Version>
		<SignAssembly>True</SignAssembly>
		<AssemblyOriginatorKeyFile>../../key.snk</AssemblyOriginatorKeyFile>
		<!--<AssemblyVersion>3.0.1.0</AssemblyVersion>-->
		<!--<FileVersion>3.0.1.0</FileVersion>-->
		<!--<GeneratePackageOnBuild>True</GeneratePackageOnBuild>-->
		<!--<PackageVersion>3.0.3</PackageVersion>-->
	</PropertyGroup>

	<ItemGroup>
		<None Include="../../icon.png" Pack="true" PackagePath="" />
	</ItemGroup>

	<PropertyGroup Condition="'$(Configuration)'=='Release' or '$(Configuration)'=='VS'">
		<GeneratePackageOnBuild>true</GeneratePackageOnBuild>
		<GenerateDocumentationFile>true</GenerateDocumentationFile>
		<Optimize>true</Optimize>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)' == 'VS'">
		<TargetFrameworks>$(TargetFrameworks)</TargetFrameworks>
		<GeneratePackageOnBuild>True</GeneratePackageOnBuild>
	</PropertyGroup>

	<PropertyGroup Condition="'$(TargetFramework)' == 'netstandard1.3'">
		<DefineConstants>COREFX</DefineConstants>
		<ImportLibs>core</ImportLibs>
	</PropertyGroup>

	<ItemGroup Condition="'$(ImportLibs)' == 'net'">
		<Reference Include="System" />
	</ItemGroup>

	<ItemGroup Condition="'$(ImportLibs)' == 'core'">
		<PackageReference Include="System.Reflection.Emit" Version="4.3.0" />
		<PackageReference Include="System.Reflection.Emit.ILGeneration" Version="4.3.0" />
		<PackageReference Include="System.Reflection.TypeExtensions" Version="4.3.0" />
		<PackageReference Include="System.ComponentModel.TypeConverter" Version="4.3.0" />
		<PackageReference Include="System.Collections.NonGeneric" Version="4.3.0" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.SourceLink.GitHub" Version="8.0.0">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
	</ItemGroup>
</Project>